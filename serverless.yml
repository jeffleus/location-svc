# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: location-svc

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  role: arn:aws:iam::236711959566:role/lambda_callsheet
  runtime: nodejs4.3

# you can overwrite defaults here
  stage: dev
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  get:
    handler: handler.get
    timeout: 3
    events:
      - http:
          path: locations/{lid}
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:236711959566:userpool/us-west-2_KMI3gTfQw
  list:
    handler: handler.get
    timeout: 3
    events:
      - http:
          path: locations
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:236711959566:userpool/us-west-2_KMI3gTfQw
  create:
    handler: handler.create
    timeout: 3
    events:
      - http:
          path: locations
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:236711959566:userpool/us-west-2_KMI3gTfQw
  update:
    handler: handler.update
    timeout: 3
    events:
      - http:
          path: locations
          method: put
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:236711959566:userpool/us-west-2_KMI3gTfQw
  delete:
    handler: handler.delete
    timeout: 3
    events:
      - http:
          path: locations/{lid}
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:236711959566:userpool/us-west-2_KMI3gTfQw			
  hello:
    handler: handler.hello
